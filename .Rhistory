getwd()
usethis::use_r("theme_fa")
usethis::use_r("rasmio_theme")
devtools::document()
devtools::build()
devtools::check()
devtools::install()
pwrench::theme_fa()
devtools::document()
devtools::build()
devtools::check()
devtools::install()
#which is standard names for Iran's states in English
#' Ostan to Province
#'
#' @param data Pass the data you are working on
#' @param column_name the is the column that contains Persian names of Ostan(استان)
#'
#' @return state_en columns that contains English name of states in Iran.
#' @export
#'
#' @examples
mutate_state_en <- function(data, column_name) {
data %>%
mutate(state_en = case_when(
{{column_name}}=="آذربایجان شرقی" ~ "East Azerbaijan",
{{column_name}}=="آذربایجان غربی" ~ "West Azerbaijan",
{{column_name}}=="اردبیل" ~ "Ardabil",
{{column_name}}=="اصفهان" ~ "Isfahan",
{{column_name}}=="البرز" ~ "Alborz",
{{column_name}}=="ایلام" ~ "Ilam",
{{column_name}}=="بوشهر" ~ "Bushehr",
{{column_name}}=="تهران" ~ "Tehran",
{{column_name}}=="چهارمحال وبختیاری"~"Chaharmahal and Bakhtiari",
{{column_name}}=="خراسان جنوبی" ~ "South Khorasan",
{{column_name}}=="خراسان رضوی" ~ "Razavi Khorasan",
{{column_name}}=="خراسان شمالی" ~ "North Khorasan",
{{column_name}}=="خوزستان" ~ "Khuzestan",
{{column_name}}=="زنجان" ~ "Zanjan",
{{column_name}}=="سمنان" ~ "Semnan",
{{column_name}}=="سیستان وبلوچستان" ~ "Sistan and Baluchestan",
{{column_name}}=="فارس" ~ "Fars",
{{column_name}}=="قزوین" ~ "Qazvin",
{{column_name}}=="قم" ~ "Qom",
{{column_name}}=="کردستان" ~"Kurdistan",
{{column_name}}=="کرمان" ~ "Kerman",
{{column_name}}=="کرمانشاه" ~ "Kermanshah",
{{column_name}}=="کهگیلویه وبویراحمد" ~"Kohgiluyeh and Boyer-Ahmad",
{{column_name}}=="گلستان" ~ "Golestan",
{{column_name}}=="گیلان" ~ "Gilan",
{{column_name}}=="لرستان" ~ "Lorestan",
{{column_name}}=="مازندران" ~ "Mazandaran",
{{column_name}}=="مرکزی" ~ "Markazi",
{{column_name}}=="هرمزگان" ~ "Hormozgan",
{{column_name}}=="همدان" ~ "Hamadan",
{{column_name}}=="یزد" ~ "Yazd",
TRUE ~ NA_character_
))
}
mutate_state_en("تهران")
#which is standard names for Iran's states in English
#' Ostan to Province
#'
#' @param data Pass the data you are working on
#' @param column_name the is the column that contains Persian names of Ostan(استان)
#'
#' @return state_en columns that contains English name of states in Iran.
#' @export
#'
#' @examples
mutate_state_en <- function(data, column_name) {
require(dplyr)
data %>%
mutate(state_en = case_when(
{{column_name}}=="آذربایجان شرقی" ~ "East Azerbaijan",
{{column_name}}=="آذربایجان غربی" ~ "West Azerbaijan",
{{column_name}}=="اردبیل" ~ "Ardabil",
{{column_name}}=="اصفهان" ~ "Isfahan",
{{column_name}}=="البرز" ~ "Alborz",
{{column_name}}=="ایلام" ~ "Ilam",
{{column_name}}=="بوشهر" ~ "Bushehr",
{{column_name}}=="تهران" ~ "Tehran",
{{column_name}}=="چهارمحال وبختیاری"~"Chaharmahal and Bakhtiari",
{{column_name}}=="خراسان جنوبی" ~ "South Khorasan",
{{column_name}}=="خراسان رضوی" ~ "Razavi Khorasan",
{{column_name}}=="خراسان شمالی" ~ "North Khorasan",
{{column_name}}=="خوزستان" ~ "Khuzestan",
{{column_name}}=="زنجان" ~ "Zanjan",
{{column_name}}=="سمنان" ~ "Semnan",
{{column_name}}=="سیستان وبلوچستان" ~ "Sistan and Baluchestan",
{{column_name}}=="فارس" ~ "Fars",
{{column_name}}=="قزوین" ~ "Qazvin",
{{column_name}}=="قم" ~ "Qom",
{{column_name}}=="کردستان" ~"Kurdistan",
{{column_name}}=="کرمان" ~ "Kerman",
{{column_name}}=="کرمانشاه" ~ "Kermanshah",
{{column_name}}=="کهگیلویه وبویراحمد" ~"Kohgiluyeh and Boyer-Ahmad",
{{column_name}}=="گلستان" ~ "Golestan",
{{column_name}}=="گیلان" ~ "Gilan",
{{column_name}}=="لرستان" ~ "Lorestan",
{{column_name}}=="مازندران" ~ "Mazandaran",
{{column_name}}=="مرکزی" ~ "Markazi",
{{column_name}}=="هرمزگان" ~ "Hormozgan",
{{column_name}}=="همدان" ~ "Hamadan",
{{column_name}}=="یزد" ~ "Yazd",
TRUE ~ NA_character_
))
}
mutate_state_en("تهران")
devtools::build()
devtools::check()
devtools::install()
devtools::install()
#' @param path
#'
#' @return
#' @export
#' @description
#' This function save your plots in ggplot2 in a dir named plot that may or may
#' not exists in you wd dir.
#'
#'
#' @examples
save_plot <- function(plot, height = 8, width = 12,dpi = 300,units = "in" ,path = getwd()) {
# Ensure the directory exists
if (!dir.exists("plot")) {
dir.create("plot/", recursive = TRUE)
}
# Save the plot
ggsave(
plot = plot,
filename = paste0("plot/", deparse(substitute(plot)), ".png"),
height = height,
width = width,
units = units,
dpi = dpi
)
}
usethis::use_r("psave_plot.r")
usethis::use_r("psave_plot.R")
devtools::build()
devtools::check()
devtools::install()
usethis::use_r()
devtools::build()
devtools::install()
devtools::build()
devtools::install()
devtools::check()
library(ggplot2)
usethis::use_r("churn")
usethis::use_roxygen_md()
usethis::use_roxygen_md("churn.r")
devtools:::document()
pkgload::dev_help('theme_fa')
pwrench::mutate_state_en()
devtools::build()
devtools::install()
devtools::check()
warnings()
